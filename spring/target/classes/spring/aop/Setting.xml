<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<bean id="target" class="spring.aop.entity.NewlecExam" p:kor="1"
		p:eng="1" p:math="1" p:com="1" />
	<bean id="logAroundAdvice"
		class="spring.aop.advice.LogAroundAdvice"></bean>
	<bean id="logBeforeAdvice"
		class="spring.aop.advice.LogBeforeAdvice"></bean>
	<bean id="logAfterReturningAdvice"
		class="spring.aop.advice.LogAfterReturningAdvice"></bean>
	<bean id="logAfterThrowingAdvice"
		class="spring.aop.advice.LogAfterThrowingAdvice"></bean>


	<bean id="classicPointCut"
		class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="total"></property>
	</bean>

	<bean id="classBeforeAdvisor"
		class="org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor">
		<property name="advice" ref ="logBeforeAdvice"></property>
		<property name="pointcut" ref="classicPointCut"></property>
	</bean>
	
	<bean id="classAroundAdvisor"
		class="org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor">
		<property name="advice" ref ="logAroundAdvice"></property>
		<property name="pointcut" ref="classicPointCut"></property>
	</bean>


	<bean id="exam"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="target"></property>
		<property name="interceptorNames">

			<list>
				<value>classAroundAdvisor</value>
				<value>classBeforeAdvisor</value>
				<value>logAfterReturningAdvice</value>
				<value>logAfterThrowingAdvice</value>
			</list>

		</property>


	</bean>
</beans>
